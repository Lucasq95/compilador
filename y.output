Terminals unused in grammar

   DIGITO
   LETRA
   CHAR_ESP
   COMMENT
   PYC
   PTO
   ENDIF
   EQ
   MENOS_UNARIO


Gramática

    0 $accept: programa $end

    1 programa: program

    2 program: definiciones_variables cuerpo_programa
    3        | definiciones_variables

    4 cuerpo_programa: cuerpo_programa sentencia
    5                | sentencia

    6 sentencia: asignacion_s
    7          | asignacion_m
    8          | decision
    9          | iteracion
   10          | printear
   11          | obtain
   12          | cteNombre

   13 asignacion_s: ID OP_ASIG expresion
   14             | ID OP_ASIG CTE_STRING

   15 $@1: /* vacío */

   16 asignacion_m: C_A $@1 lista_var C_C OP_ASIG C_A lista_exp C_C

   17 lista_var: lista_var COMA ID
   18          | ID

   19 lista_exp: lista_exp COMA tipo_exp
   20          | tipo_exp

   21 tipo_exp: expresion
   22         | CTE_STRING

   23 decision: IF P_A condiciones P_C L_A cuerpo_programa L_C ELSE L_A cuerpo_programa L_C
   24         | IF P_A condiciones P_C L_A cuerpo_programa L_C

   25 condiciones: condicion AND condicion
   26            | condicion OR condicion
   27            | NOT P_A condicion P_C
   28            | condicion
   29            | all_equals

   30 condicion: ID operador_logico factor

   31 operador_logico: OP_MAX
   32                | OP_MIN
   33                | OP_MINEQ
   34                | OP_MAXEQ
   35                | OP_EQ
   36                | OP_NEQ

   37 iteracion: REPEAT cuerpo_programa UNTIL condiciones

   38 printear: PRINT CTE_STRING
   39         | PRINT ID

   40 obtain: READ ID

   41 cteNombre: CONST constExp

   42 constExp: ID OP_ASIG CTE_ENT
   43         | ID OP_ASIG CTE_STRING
   44         | ID OP_ASIG CTE_REAL

   45 expresion: expresion OP_SUMA termino
   46          | expresion OP_RESTA termino
   47          | termino

   48 termino: termino OP_MULT factor
   49        | termino OP_DIV factor
   50        | factor

   51 factor: ID
   52       | CTE_ENT
   53       | CTE_REAL
   54       | P_A expresion P_C

   55 definiciones_variables: VAR definicion_variables ENDVAR

   56 definicion_variables: definicion_variables def
   57                     | def

   58 def: C_A lista_de_tipos C_C DPTO C_A lista_var C_C

   59 lista_de_tipos: lista_de_tipos COMA tipos_primitivos
   60               | tipos_primitivos

   61 tipos_primitivos: STRING
   62                 | FLOAT
   63                 | INT

   64 all_equals: ALL_EQUALS P_A listas_exp P_C

   65 listas_exp: listas_exp COMA lista
   66           | lista COMA lista

   67 lista: C_A items C_C

   68 items: items COMA expresion
   69      | expresion


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
DIGITO (258)
LETRA (259)
CHAR_ESP (260)
COMMENT (261)
ID (262) 13 14 17 18 30 39 40 42 43 44 51
CTE_STRING (263) 14 22 38 43
CTE_ENT (264) 42 52
CTE_REAL (265) 44 53
P_A (266) 23 24 27 54 64
P_C (267) 23 24 27 54 64
C_A (268) 16 58 67
C_C (269) 16 58 67
L_A (270) 23 24
L_C (271) 23 24
PYC (272)
PTO (273)
DPTO (274) 58
COMA (275) 17 19 59 65 66 68
IF (276) 23 24
ELSE (277) 23
ENDIF (278)
VAR (279) 55
ENDVAR (280) 55
REPEAT (281) 37
UNTIL (282) 37
PRINT (283) 38 39
READ (284) 40
CONST (285) 41
INT (286) 63
FLOAT (287) 62
STRING (288) 61
OP_ASIG (289) 13 14 16 42 43 44
ALL_EQUALS (290) 64
OP_SUMA (291) 45
OP_RESTA (292) 46
OP_MULT (293) 48
OP_DIV (294) 49
AND (295) 25
OR (296) 26
NOT (297) 27
OP_MAX (298) 31
OP_MAXEQ (299) 34
OP_MIN (300) 32
OP_MINEQ (301) 33
OP_NEQ (302) 36
OP_EQ (303) 35
EQ (304)
MENOS_UNARIO (305)


No terminales con las reglas donde aparecen

$accept (51)
    en la izquierda: 0
programa (52)
    en la izquierda: 1, en la derecha: 0
program (53)
    en la izquierda: 2 3, en la derecha: 1
cuerpo_programa (54)
    en la izquierda: 4 5, en la derecha: 2 4 23 24 37
sentencia (55)
    en la izquierda: 6 7 8 9 10 11 12, en la derecha: 4 5
asignacion_s (56)
    en la izquierda: 13 14, en la derecha: 6
asignacion_m (57)
    en la izquierda: 16, en la derecha: 7
$@1 (58)
    en la izquierda: 15, en la derecha: 16
lista_var (59)
    en la izquierda: 17 18, en la derecha: 16 17 58
lista_exp (60)
    en la izquierda: 19 20, en la derecha: 16 19
tipo_exp (61)
    en la izquierda: 21 22, en la derecha: 19 20
decision (62)
    en la izquierda: 23 24, en la derecha: 8
condiciones (63)
    en la izquierda: 25 26 27 28 29, en la derecha: 23 24 37
condicion (64)
    en la izquierda: 30, en la derecha: 25 26 27 28
operador_logico (65)
    en la izquierda: 31 32 33 34 35 36, en la derecha: 30
iteracion (66)
    en la izquierda: 37, en la derecha: 9
printear (67)
    en la izquierda: 38 39, en la derecha: 10
obtain (68)
    en la izquierda: 40, en la derecha: 11
cteNombre (69)
    en la izquierda: 41, en la derecha: 12
constExp (70)
    en la izquierda: 42 43 44, en la derecha: 41
expresion (71)
    en la izquierda: 45 46 47, en la derecha: 13 21 45 46 54 68 69
termino (72)
    en la izquierda: 48 49 50, en la derecha: 45 46 47 48 49
factor (73)
    en la izquierda: 51 52 53 54, en la derecha: 30 48 49 50
definiciones_variables (74)
    en la izquierda: 55, en la derecha: 2 3
definicion_variables (75)
    en la izquierda: 56 57, en la derecha: 55 56
def (76)
    en la izquierda: 58, en la derecha: 56 57
lista_de_tipos (77)
    en la izquierda: 59 60, en la derecha: 58 59
tipos_primitivos (78)
    en la izquierda: 61 62 63, en la derecha: 59 60
all_equals (79)
    en la izquierda: 64, en la derecha: 29
listas_exp (80)
    en la izquierda: 65 66, en la derecha: 64 65
lista (81)
    en la izquierda: 67, en la derecha: 65 66
items (82)
    en la izquierda: 68 69, en la derecha: 67 68


estado 0

    0 $accept: . programa $end

    VAR  desplazar e ir al estado 1

    programa                ir al estado 2
    program                 ir al estado 3
    definiciones_variables  ir al estado 4


estado 1

   55 definiciones_variables: VAR . definicion_variables ENDVAR

    C_A  desplazar e ir al estado 5

    definicion_variables  ir al estado 6
    def                   ir al estado 7


estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 8


estado 3

    1 programa: program .

    $default  reduce usando la regla 1 (programa)


estado 4

    2 program: definiciones_variables . cuerpo_programa
    3        | definiciones_variables .

    ID      desplazar e ir al estado 9
    C_A     desplazar e ir al estado 10
    IF      desplazar e ir al estado 11
    REPEAT  desplazar e ir al estado 12
    PRINT   desplazar e ir al estado 13
    READ    desplazar e ir al estado 14
    CONST   desplazar e ir al estado 15

    $default  reduce usando la regla 3 (program)

    cuerpo_programa  ir al estado 16
    sentencia        ir al estado 17
    asignacion_s     ir al estado 18
    asignacion_m     ir al estado 19
    decision         ir al estado 20
    iteracion        ir al estado 21
    printear         ir al estado 22
    obtain           ir al estado 23
    cteNombre        ir al estado 24


estado 5

   58 def: C_A . lista_de_tipos C_C DPTO C_A lista_var C_C

    INT     desplazar e ir al estado 25
    FLOAT   desplazar e ir al estado 26
    STRING  desplazar e ir al estado 27

    lista_de_tipos    ir al estado 28
    tipos_primitivos  ir al estado 29


estado 6

   55 definiciones_variables: VAR definicion_variables . ENDVAR
   56 definicion_variables: definicion_variables . def

    C_A     desplazar e ir al estado 5
    ENDVAR  desplazar e ir al estado 30

    def  ir al estado 31


estado 7

   57 definicion_variables: def .

    $default  reduce usando la regla 57 (definicion_variables)


estado 8

    0 $accept: programa $end .

    $default  aceptar


estado 9

   13 asignacion_s: ID . OP_ASIG expresion
   14             | ID . OP_ASIG CTE_STRING

    OP_ASIG  desplazar e ir al estado 32


estado 10

   16 asignacion_m: C_A . $@1 lista_var C_C OP_ASIG C_A lista_exp C_C

    $default  reduce usando la regla 15 ($@1)

    $@1  ir al estado 33


estado 11

   23 decision: IF . P_A condiciones P_C L_A cuerpo_programa L_C ELSE L_A cuerpo_programa L_C
   24         | IF . P_A condiciones P_C L_A cuerpo_programa L_C

    P_A  desplazar e ir al estado 34


estado 12

   37 iteracion: REPEAT . cuerpo_programa UNTIL condiciones

    ID      desplazar e ir al estado 9
    C_A     desplazar e ir al estado 10
    IF      desplazar e ir al estado 11
    REPEAT  desplazar e ir al estado 12
    PRINT   desplazar e ir al estado 13
    READ    desplazar e ir al estado 14
    CONST   desplazar e ir al estado 15

    cuerpo_programa  ir al estado 35
    sentencia        ir al estado 17
    asignacion_s     ir al estado 18
    asignacion_m     ir al estado 19
    decision         ir al estado 20
    iteracion        ir al estado 21
    printear         ir al estado 22
    obtain           ir al estado 23
    cteNombre        ir al estado 24


estado 13

   38 printear: PRINT . CTE_STRING
   39         | PRINT . ID

    ID          desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37


estado 14

   40 obtain: READ . ID

    ID  desplazar e ir al estado 38


estado 15

   41 cteNombre: CONST . constExp

    ID  desplazar e ir al estado 39

    constExp  ir al estado 40


estado 16

    2 program: definiciones_variables cuerpo_programa .
    4 cuerpo_programa: cuerpo_programa . sentencia

    ID      desplazar e ir al estado 9
    C_A     desplazar e ir al estado 10
    IF      desplazar e ir al estado 11
    REPEAT  desplazar e ir al estado 12
    PRINT   desplazar e ir al estado 13
    READ    desplazar e ir al estado 14
    CONST   desplazar e ir al estado 15

    $default  reduce usando la regla 2 (program)

    sentencia     ir al estado 41
    asignacion_s  ir al estado 18
    asignacion_m  ir al estado 19
    decision      ir al estado 20
    iteracion     ir al estado 21
    printear      ir al estado 22
    obtain        ir al estado 23
    cteNombre     ir al estado 24


estado 17

    5 cuerpo_programa: sentencia .

    $default  reduce usando la regla 5 (cuerpo_programa)


estado 18

    6 sentencia: asignacion_s .

    $default  reduce usando la regla 6 (sentencia)


estado 19

    7 sentencia: asignacion_m .

    $default  reduce usando la regla 7 (sentencia)


estado 20

    8 sentencia: decision .

    $default  reduce usando la regla 8 (sentencia)


estado 21

    9 sentencia: iteracion .

    $default  reduce usando la regla 9 (sentencia)


estado 22

   10 sentencia: printear .

    $default  reduce usando la regla 10 (sentencia)


estado 23

   11 sentencia: obtain .

    $default  reduce usando la regla 11 (sentencia)


estado 24

   12 sentencia: cteNombre .

    $default  reduce usando la regla 12 (sentencia)


estado 25

   63 tipos_primitivos: INT .

    $default  reduce usando la regla 63 (tipos_primitivos)


estado 26

   62 tipos_primitivos: FLOAT .

    $default  reduce usando la regla 62 (tipos_primitivos)


estado 27

   61 tipos_primitivos: STRING .

    $default  reduce usando la regla 61 (tipos_primitivos)


estado 28

   58 def: C_A lista_de_tipos . C_C DPTO C_A lista_var C_C
   59 lista_de_tipos: lista_de_tipos . COMA tipos_primitivos

    C_C   desplazar e ir al estado 42
    COMA  desplazar e ir al estado 43


estado 29

   60 lista_de_tipos: tipos_primitivos .

    $default  reduce usando la regla 60 (lista_de_tipos)


estado 30

   55 definiciones_variables: VAR definicion_variables ENDVAR .

    $default  reduce usando la regla 55 (definiciones_variables)


estado 31

   56 definicion_variables: definicion_variables def .

    $default  reduce usando la regla 56 (definicion_variables)


estado 32

   13 asignacion_s: ID OP_ASIG . expresion
   14             | ID OP_ASIG . CTE_STRING

    ID          desplazar e ir al estado 44
    CTE_STRING  desplazar e ir al estado 45
    CTE_ENT     desplazar e ir al estado 46
    CTE_REAL    desplazar e ir al estado 47
    P_A         desplazar e ir al estado 48

    expresion  ir al estado 49
    termino    ir al estado 50
    factor     ir al estado 51


estado 33

   16 asignacion_m: C_A $@1 . lista_var C_C OP_ASIG C_A lista_exp C_C

    ID  desplazar e ir al estado 52

    lista_var  ir al estado 53


estado 34

   23 decision: IF P_A . condiciones P_C L_A cuerpo_programa L_C ELSE L_A cuerpo_programa L_C
   24         | IF P_A . condiciones P_C L_A cuerpo_programa L_C

    ID          desplazar e ir al estado 54
    ALL_EQUALS  desplazar e ir al estado 55
    NOT         desplazar e ir al estado 56

    condiciones  ir al estado 57
    condicion    ir al estado 58
    all_equals   ir al estado 59


estado 35

    4 cuerpo_programa: cuerpo_programa . sentencia
   37 iteracion: REPEAT cuerpo_programa . UNTIL condiciones

    ID      desplazar e ir al estado 9
    C_A     desplazar e ir al estado 10
    IF      desplazar e ir al estado 11
    REPEAT  desplazar e ir al estado 12
    UNTIL   desplazar e ir al estado 60
    PRINT   desplazar e ir al estado 13
    READ    desplazar e ir al estado 14
    CONST   desplazar e ir al estado 15

    sentencia     ir al estado 41
    asignacion_s  ir al estado 18
    asignacion_m  ir al estado 19
    decision      ir al estado 20
    iteracion     ir al estado 21
    printear      ir al estado 22
    obtain        ir al estado 23
    cteNombre     ir al estado 24


estado 36

   39 printear: PRINT ID .

    $default  reduce usando la regla 39 (printear)


estado 37

   38 printear: PRINT CTE_STRING .

    $default  reduce usando la regla 38 (printear)


estado 38

   40 obtain: READ ID .

    $default  reduce usando la regla 40 (obtain)


estado 39

   42 constExp: ID . OP_ASIG CTE_ENT
   43         | ID . OP_ASIG CTE_STRING
   44         | ID . OP_ASIG CTE_REAL

    OP_ASIG  desplazar e ir al estado 61


estado 40

   41 cteNombre: CONST constExp .

    $default  reduce usando la regla 41 (cteNombre)


estado 41

    4 cuerpo_programa: cuerpo_programa sentencia .

    $default  reduce usando la regla 4 (cuerpo_programa)


estado 42

   58 def: C_A lista_de_tipos C_C . DPTO C_A lista_var C_C

    DPTO  desplazar e ir al estado 62


estado 43

   59 lista_de_tipos: lista_de_tipos COMA . tipos_primitivos

    INT     desplazar e ir al estado 25
    FLOAT   desplazar e ir al estado 26
    STRING  desplazar e ir al estado 27

    tipos_primitivos  ir al estado 63


estado 44

   51 factor: ID .

    $default  reduce usando la regla 51 (factor)


estado 45

   14 asignacion_s: ID OP_ASIG CTE_STRING .

    $default  reduce usando la regla 14 (asignacion_s)


estado 46

   52 factor: CTE_ENT .

    $default  reduce usando la regla 52 (factor)


estado 47

   53 factor: CTE_REAL .

    $default  reduce usando la regla 53 (factor)


estado 48

   54 factor: P_A . expresion P_C

    ID        desplazar e ir al estado 44
    CTE_ENT   desplazar e ir al estado 46
    CTE_REAL  desplazar e ir al estado 47
    P_A       desplazar e ir al estado 48

    expresion  ir al estado 64
    termino    ir al estado 50
    factor     ir al estado 51


estado 49

   13 asignacion_s: ID OP_ASIG expresion .
   45 expresion: expresion . OP_SUMA termino
   46          | expresion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 65
    OP_RESTA  desplazar e ir al estado 66

    $default  reduce usando la regla 13 (asignacion_s)


estado 50

   47 expresion: termino .
   48 termino: termino . OP_MULT factor
   49        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 67
    OP_DIV   desplazar e ir al estado 68

    $default  reduce usando la regla 47 (expresion)


estado 51

   50 termino: factor .

    $default  reduce usando la regla 50 (termino)


estado 52

   18 lista_var: ID .

    $default  reduce usando la regla 18 (lista_var)


estado 53

   16 asignacion_m: C_A $@1 lista_var . C_C OP_ASIG C_A lista_exp C_C
   17 lista_var: lista_var . COMA ID

    C_C   desplazar e ir al estado 69
    COMA  desplazar e ir al estado 70


estado 54

   30 condicion: ID . operador_logico factor

    OP_MAX    desplazar e ir al estado 71
    OP_MAXEQ  desplazar e ir al estado 72
    OP_MIN    desplazar e ir al estado 73
    OP_MINEQ  desplazar e ir al estado 74
    OP_NEQ    desplazar e ir al estado 75
    OP_EQ     desplazar e ir al estado 76

    operador_logico  ir al estado 77


estado 55

   64 all_equals: ALL_EQUALS . P_A listas_exp P_C

    P_A  desplazar e ir al estado 78


estado 56

   27 condiciones: NOT . P_A condicion P_C

    P_A  desplazar e ir al estado 79


estado 57

   23 decision: IF P_A condiciones . P_C L_A cuerpo_programa L_C ELSE L_A cuerpo_programa L_C
   24         | IF P_A condiciones . P_C L_A cuerpo_programa L_C

    P_C  desplazar e ir al estado 80


estado 58

   25 condiciones: condicion . AND condicion
   26            | condicion . OR condicion
   28            | condicion .

    AND  desplazar e ir al estado 81
    OR   desplazar e ir al estado 82

    $default  reduce usando la regla 28 (condiciones)


estado 59

   29 condiciones: all_equals .

    $default  reduce usando la regla 29 (condiciones)


estado 60

   37 iteracion: REPEAT cuerpo_programa UNTIL . condiciones

    ID          desplazar e ir al estado 54
    ALL_EQUALS  desplazar e ir al estado 55
    NOT         desplazar e ir al estado 56

    condiciones  ir al estado 83
    condicion    ir al estado 58
    all_equals   ir al estado 59


estado 61

   42 constExp: ID OP_ASIG . CTE_ENT
   43         | ID OP_ASIG . CTE_STRING
   44         | ID OP_ASIG . CTE_REAL

    CTE_STRING  desplazar e ir al estado 84
    CTE_ENT     desplazar e ir al estado 85
    CTE_REAL    desplazar e ir al estado 86


estado 62

   58 def: C_A lista_de_tipos C_C DPTO . C_A lista_var C_C

    C_A  desplazar e ir al estado 87


estado 63

   59 lista_de_tipos: lista_de_tipos COMA tipos_primitivos .

    $default  reduce usando la regla 59 (lista_de_tipos)


estado 64

   45 expresion: expresion . OP_SUMA termino
   46          | expresion . OP_RESTA termino
   54 factor: P_A expresion . P_C

    P_C       desplazar e ir al estado 88
    OP_SUMA   desplazar e ir al estado 65
    OP_RESTA  desplazar e ir al estado 66


estado 65

   45 expresion: expresion OP_SUMA . termino

    ID        desplazar e ir al estado 44
    CTE_ENT   desplazar e ir al estado 46
    CTE_REAL  desplazar e ir al estado 47
    P_A       desplazar e ir al estado 48

    termino  ir al estado 89
    factor   ir al estado 51


estado 66

   46 expresion: expresion OP_RESTA . termino

    ID        desplazar e ir al estado 44
    CTE_ENT   desplazar e ir al estado 46
    CTE_REAL  desplazar e ir al estado 47
    P_A       desplazar e ir al estado 48

    termino  ir al estado 90
    factor   ir al estado 51


estado 67

   48 termino: termino OP_MULT . factor

    ID        desplazar e ir al estado 44
    CTE_ENT   desplazar e ir al estado 46
    CTE_REAL  desplazar e ir al estado 47
    P_A       desplazar e ir al estado 48

    factor  ir al estado 91


estado 68

   49 termino: termino OP_DIV . factor

    ID        desplazar e ir al estado 44
    CTE_ENT   desplazar e ir al estado 46
    CTE_REAL  desplazar e ir al estado 47
    P_A       desplazar e ir al estado 48

    factor  ir al estado 92


estado 69

   16 asignacion_m: C_A $@1 lista_var C_C . OP_ASIG C_A lista_exp C_C

    OP_ASIG  desplazar e ir al estado 93


estado 70

   17 lista_var: lista_var COMA . ID

    ID  desplazar e ir al estado 94


estado 71

   31 operador_logico: OP_MAX .

    $default  reduce usando la regla 31 (operador_logico)


estado 72

   34 operador_logico: OP_MAXEQ .

    $default  reduce usando la regla 34 (operador_logico)


estado 73

   32 operador_logico: OP_MIN .

    $default  reduce usando la regla 32 (operador_logico)


estado 74

   33 operador_logico: OP_MINEQ .

    $default  reduce usando la regla 33 (operador_logico)


estado 75

   36 operador_logico: OP_NEQ .

    $default  reduce usando la regla 36 (operador_logico)


estado 76

   35 operador_logico: OP_EQ .

    $default  reduce usando la regla 35 (operador_logico)


estado 77

   30 condicion: ID operador_logico . factor

    ID        desplazar e ir al estado 44
    CTE_ENT   desplazar e ir al estado 46
    CTE_REAL  desplazar e ir al estado 47
    P_A       desplazar e ir al estado 48

    factor  ir al estado 95


estado 78

   64 all_equals: ALL_EQUALS P_A . listas_exp P_C

    C_A  desplazar e ir al estado 96

    listas_exp  ir al estado 97
    lista       ir al estado 98


estado 79

   27 condiciones: NOT P_A . condicion P_C

    ID  desplazar e ir al estado 54

    condicion  ir al estado 99


estado 80

   23 decision: IF P_A condiciones P_C . L_A cuerpo_programa L_C ELSE L_A cuerpo_programa L_C
   24         | IF P_A condiciones P_C . L_A cuerpo_programa L_C

    L_A  desplazar e ir al estado 100


estado 81

   25 condiciones: condicion AND . condicion

    ID  desplazar e ir al estado 54

    condicion  ir al estado 101


estado 82

   26 condiciones: condicion OR . condicion

    ID  desplazar e ir al estado 54

    condicion  ir al estado 102


estado 83

   37 iteracion: REPEAT cuerpo_programa UNTIL condiciones .

    $default  reduce usando la regla 37 (iteracion)


estado 84

   43 constExp: ID OP_ASIG CTE_STRING .

    $default  reduce usando la regla 43 (constExp)


estado 85

   42 constExp: ID OP_ASIG CTE_ENT .

    $default  reduce usando la regla 42 (constExp)


estado 86

   44 constExp: ID OP_ASIG CTE_REAL .

    $default  reduce usando la regla 44 (constExp)


estado 87

   58 def: C_A lista_de_tipos C_C DPTO C_A . lista_var C_C

    ID  desplazar e ir al estado 52

    lista_var  ir al estado 103


estado 88

   54 factor: P_A expresion P_C .

    $default  reduce usando la regla 54 (factor)


estado 89

   45 expresion: expresion OP_SUMA termino .
   48 termino: termino . OP_MULT factor
   49        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 67
    OP_DIV   desplazar e ir al estado 68

    $default  reduce usando la regla 45 (expresion)


estado 90

   46 expresion: expresion OP_RESTA termino .
   48 termino: termino . OP_MULT factor
   49        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 67
    OP_DIV   desplazar e ir al estado 68

    $default  reduce usando la regla 46 (expresion)


estado 91

   48 termino: termino OP_MULT factor .

    $default  reduce usando la regla 48 (termino)


estado 92

   49 termino: termino OP_DIV factor .

    $default  reduce usando la regla 49 (termino)


estado 93

   16 asignacion_m: C_A $@1 lista_var C_C OP_ASIG . C_A lista_exp C_C

    C_A  desplazar e ir al estado 104


estado 94

   17 lista_var: lista_var COMA ID .

    $default  reduce usando la regla 17 (lista_var)


estado 95

   30 condicion: ID operador_logico factor .

    $default  reduce usando la regla 30 (condicion)


estado 96

   67 lista: C_A . items C_C

    ID        desplazar e ir al estado 44
    CTE_ENT   desplazar e ir al estado 46
    CTE_REAL  desplazar e ir al estado 47
    P_A       desplazar e ir al estado 48

    expresion  ir al estado 105
    termino    ir al estado 50
    factor     ir al estado 51
    items      ir al estado 106


estado 97

   64 all_equals: ALL_EQUALS P_A listas_exp . P_C
   65 listas_exp: listas_exp . COMA lista

    P_C   desplazar e ir al estado 107
    COMA  desplazar e ir al estado 108


estado 98

   66 listas_exp: lista . COMA lista

    COMA  desplazar e ir al estado 109


estado 99

   27 condiciones: NOT P_A condicion . P_C

    P_C  desplazar e ir al estado 110


estado 100

   23 decision: IF P_A condiciones P_C L_A . cuerpo_programa L_C ELSE L_A cuerpo_programa L_C
   24         | IF P_A condiciones P_C L_A . cuerpo_programa L_C

    ID      desplazar e ir al estado 9
    C_A     desplazar e ir al estado 10
    IF      desplazar e ir al estado 11
    REPEAT  desplazar e ir al estado 12
    PRINT   desplazar e ir al estado 13
    READ    desplazar e ir al estado 14
    CONST   desplazar e ir al estado 15

    cuerpo_programa  ir al estado 111
    sentencia        ir al estado 17
    asignacion_s     ir al estado 18
    asignacion_m     ir al estado 19
    decision         ir al estado 20
    iteracion        ir al estado 21
    printear         ir al estado 22
    obtain           ir al estado 23
    cteNombre        ir al estado 24


estado 101

   25 condiciones: condicion AND condicion .

    $default  reduce usando la regla 25 (condiciones)


estado 102

   26 condiciones: condicion OR condicion .

    $default  reduce usando la regla 26 (condiciones)


estado 103

   17 lista_var: lista_var . COMA ID
   58 def: C_A lista_de_tipos C_C DPTO C_A lista_var . C_C

    C_C   desplazar e ir al estado 112
    COMA  desplazar e ir al estado 70


estado 104

   16 asignacion_m: C_A $@1 lista_var C_C OP_ASIG C_A . lista_exp C_C

    ID          desplazar e ir al estado 44
    CTE_STRING  desplazar e ir al estado 113
    CTE_ENT     desplazar e ir al estado 46
    CTE_REAL    desplazar e ir al estado 47
    P_A         desplazar e ir al estado 48

    lista_exp  ir al estado 114
    tipo_exp   ir al estado 115
    expresion  ir al estado 116
    termino    ir al estado 50
    factor     ir al estado 51


estado 105

   45 expresion: expresion . OP_SUMA termino
   46          | expresion . OP_RESTA termino
   69 items: expresion .

    OP_SUMA   desplazar e ir al estado 65
    OP_RESTA  desplazar e ir al estado 66

    $default  reduce usando la regla 69 (items)


estado 106

   67 lista: C_A items . C_C
   68 items: items . COMA expresion

    C_C   desplazar e ir al estado 117
    COMA  desplazar e ir al estado 118


estado 107

   64 all_equals: ALL_EQUALS P_A listas_exp P_C .

    $default  reduce usando la regla 64 (all_equals)


estado 108

   65 listas_exp: listas_exp COMA . lista

    C_A  desplazar e ir al estado 96

    lista  ir al estado 119


estado 109

   66 listas_exp: lista COMA . lista

    C_A  desplazar e ir al estado 96

    lista  ir al estado 120


estado 110

   27 condiciones: NOT P_A condicion P_C .

    $default  reduce usando la regla 27 (condiciones)


estado 111

    4 cuerpo_programa: cuerpo_programa . sentencia
   23 decision: IF P_A condiciones P_C L_A cuerpo_programa . L_C ELSE L_A cuerpo_programa L_C
   24         | IF P_A condiciones P_C L_A cuerpo_programa . L_C

    ID      desplazar e ir al estado 9
    C_A     desplazar e ir al estado 10
    L_C     desplazar e ir al estado 121
    IF      desplazar e ir al estado 11
    REPEAT  desplazar e ir al estado 12
    PRINT   desplazar e ir al estado 13
    READ    desplazar e ir al estado 14
    CONST   desplazar e ir al estado 15

    sentencia     ir al estado 41
    asignacion_s  ir al estado 18
    asignacion_m  ir al estado 19
    decision      ir al estado 20
    iteracion     ir al estado 21
    printear      ir al estado 22
    obtain        ir al estado 23
    cteNombre     ir al estado 24


estado 112

   58 def: C_A lista_de_tipos C_C DPTO C_A lista_var C_C .

    $default  reduce usando la regla 58 (def)


estado 113

   22 tipo_exp: CTE_STRING .

    $default  reduce usando la regla 22 (tipo_exp)


estado 114

   16 asignacion_m: C_A $@1 lista_var C_C OP_ASIG C_A lista_exp . C_C
   19 lista_exp: lista_exp . COMA tipo_exp

    C_C   desplazar e ir al estado 122
    COMA  desplazar e ir al estado 123


estado 115

   20 lista_exp: tipo_exp .

    $default  reduce usando la regla 20 (lista_exp)


estado 116

   21 tipo_exp: expresion .
   45 expresion: expresion . OP_SUMA termino
   46          | expresion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 65
    OP_RESTA  desplazar e ir al estado 66

    $default  reduce usando la regla 21 (tipo_exp)


estado 117

   67 lista: C_A items C_C .

    $default  reduce usando la regla 67 (lista)


estado 118

   68 items: items COMA . expresion

    ID        desplazar e ir al estado 44
    CTE_ENT   desplazar e ir al estado 46
    CTE_REAL  desplazar e ir al estado 47
    P_A       desplazar e ir al estado 48

    expresion  ir al estado 124
    termino    ir al estado 50
    factor     ir al estado 51


estado 119

   65 listas_exp: listas_exp COMA lista .

    $default  reduce usando la regla 65 (listas_exp)


estado 120

   66 listas_exp: lista COMA lista .

    $default  reduce usando la regla 66 (listas_exp)


estado 121

   23 decision: IF P_A condiciones P_C L_A cuerpo_programa L_C . ELSE L_A cuerpo_programa L_C
   24         | IF P_A condiciones P_C L_A cuerpo_programa L_C .

    ELSE  desplazar e ir al estado 125

    $default  reduce usando la regla 24 (decision)


estado 122

   16 asignacion_m: C_A $@1 lista_var C_C OP_ASIG C_A lista_exp C_C .

    $default  reduce usando la regla 16 (asignacion_m)


estado 123

   19 lista_exp: lista_exp COMA . tipo_exp

    ID          desplazar e ir al estado 44
    CTE_STRING  desplazar e ir al estado 113
    CTE_ENT     desplazar e ir al estado 46
    CTE_REAL    desplazar e ir al estado 47
    P_A         desplazar e ir al estado 48

    tipo_exp   ir al estado 126
    expresion  ir al estado 116
    termino    ir al estado 50
    factor     ir al estado 51


estado 124

   45 expresion: expresion . OP_SUMA termino
   46          | expresion . OP_RESTA termino
   68 items: items COMA expresion .

    OP_SUMA   desplazar e ir al estado 65
    OP_RESTA  desplazar e ir al estado 66

    $default  reduce usando la regla 68 (items)


estado 125

   23 decision: IF P_A condiciones P_C L_A cuerpo_programa L_C ELSE . L_A cuerpo_programa L_C

    L_A  desplazar e ir al estado 127


estado 126

   19 lista_exp: lista_exp COMA tipo_exp .

    $default  reduce usando la regla 19 (lista_exp)


estado 127

   23 decision: IF P_A condiciones P_C L_A cuerpo_programa L_C ELSE L_A . cuerpo_programa L_C

    ID      desplazar e ir al estado 9
    C_A     desplazar e ir al estado 10
    IF      desplazar e ir al estado 11
    REPEAT  desplazar e ir al estado 12
    PRINT   desplazar e ir al estado 13
    READ    desplazar e ir al estado 14
    CONST   desplazar e ir al estado 15

    cuerpo_programa  ir al estado 128
    sentencia        ir al estado 17
    asignacion_s     ir al estado 18
    asignacion_m     ir al estado 19
    decision         ir al estado 20
    iteracion        ir al estado 21
    printear         ir al estado 22
    obtain           ir al estado 23
    cteNombre        ir al estado 24


estado 128

    4 cuerpo_programa: cuerpo_programa . sentencia
   23 decision: IF P_A condiciones P_C L_A cuerpo_programa L_C ELSE L_A cuerpo_programa . L_C

    ID      desplazar e ir al estado 9
    C_A     desplazar e ir al estado 10
    L_C     desplazar e ir al estado 129
    IF      desplazar e ir al estado 11
    REPEAT  desplazar e ir al estado 12
    PRINT   desplazar e ir al estado 13
    READ    desplazar e ir al estado 14
    CONST   desplazar e ir al estado 15

    sentencia     ir al estado 41
    asignacion_s  ir al estado 18
    asignacion_m  ir al estado 19
    decision      ir al estado 20
    iteracion     ir al estado 21
    printear      ir al estado 22
    obtain        ir al estado 23
    cteNombre     ir al estado 24


estado 129

   23 decision: IF P_A condiciones P_C L_A cuerpo_programa L_C ELSE L_A cuerpo_programa L_C .

    $default  reduce usando la regla 23 (decision)
